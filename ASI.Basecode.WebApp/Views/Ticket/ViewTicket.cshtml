@model ASI.Basecode.Services.ServiceModels.TicketViewModel

@{
    ViewData["Title"] = "ViewTicket";
    await Html.RenderPartialAsync("_FeedbackModal", Model);
    await Html.RenderPartialAsync("_DeleteModal");
}

<h1>View Ticket</h1>

<div>
    <hr />
    <dl class="row">
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.TicketId)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.TicketId)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Subject)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Subject)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.IssueDescription)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.IssueDescription)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.CategoryTypeId)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.CategoryType.CategoryName)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.PriorityTypeId)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.PriorityType.PriorityName)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.StatusTypeId)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.StatusType.StatusName)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.CreatedDate)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.CreatedDate)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Attachment)
        </dt>
        <dd class="col-sm-10">
            @if (Model.Attachment == null)
            {
                @:No Attachment
            }
            else
            {
                <a href="@Url.Action("DownloadAttachment", "Ticket", new { id = Model.TicketId })">@Model.Attachment.Name</a>
            }
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.UpdatedDate)
        </dt>
        <dd class="col-sm-10">
            @if (Model.UpdatedDate == null)
            {
                @:No Updates
            }
            else
            {
                @Html.DisplayFor(model => model.UpdatedDate)
            }
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.ResolvedDate)
        </dt>
        <dd class="col-sm-10">
            @if (Model.ResolvedDate == null)
            {
                @:Open
            }
            else
            {
                @Html.DisplayFor(model => model.ResolvedDate)
            }
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.TicketAssignment)
        </dt>
        <dd class="col-sm-10">
            @if (Model.TicketAssignment == null)
            {
                @:No Assignee
            }
            else
            {
                @Html.DisplayFor(model => model.Agent.Name)
            }
        </dd>
    </dl>
    @if (Model.Feedback != null)
    {
        <hr />
        <h4>Feedback</h4>
        <dl class="row">
            <dt class="col-sm-2">Rating</dt>
            <dd class="col-sm-10">
                <div class="star-rating no-interaction">
                    @{
                        for (int i = 5; i >= 1; i--)
                        {
                            <input disabled type="radio" id="star-@i" name="FeedbackRating"
                                   value="@i" @(Model.Feedback.FeedbackRating == i ? "checked" :
                       (Model.Feedback.FeedbackRating == 0 && i == 1 ? "checked" : "")) />
                            <label for="star-@i" title="@i stars"></label>
                        }
                    }
                </div>
            </dd>
            <dt class="col-sm-2">Content</dt>
            <dd class="col-sm-10">@Model.Feedback.FeedbackContent</dd>
            <dt class="col-sm-2">Submitted By</dt>
            <dd class="col-sm-10">@Model.Feedback.User.Name</dd>
            <dt class="col-sm-2">Created Date</dt>
            <dd class="col-sm-10">@Model.Feedback.CreatedDate</dd>
        </dl>
    }
</div>

<div>
    @if (Model.StatusType.StatusName != "Resolved")
    {
        @Html.ActionLink("Edit", "Edit", new { id = Model.TicketId })
        <text> | </text>
    }
    <a asp-action="ViewAll">Back to List</a>
    @if (Model.Feedback == null && User.IsInRole("Employee") && Model.StatusType.StatusName == "Resolved")
    {
        <button type="button" class="btn btn-primary" data-toggle="modal" data-target="#feedbackModal">
            Provide Feedback
        </button>
    }
</div>

<hr />
<div id="comments-section">
    <h4>Comments</h4>
    @if(Model.StatusType.StatusName != "Resolved" && Model.StatusType.StatusName != "Closed")
    {
        <div>
            <a href="#" id="new-comment-link">New Comment</a>
            <div id="new-comment-section" style="display:none;">
                @Html.AntiForgeryToken()
                <textarea id="new-comment-content" class="form-control" placeholder="Add a comment..."></textarea>
                <button id="post-comment-btn" class="btn btn-primary">Post Comment</button>
                <button id="cancel-comment-btn" class="btn btn-secondary">Cancel</button>
            </div>
        </div>
    }
    @if (Model.Comments.Any())
    {
        @foreach (var comment in Model.Comments.Where(c => c.ParentId == null))
        {
            @await Html.PartialAsync("_Comment", comment)
        }
    }
    else
    {
        <p class="alert alert-warning text-center" role="alert">No comments.</p>
    }
</div>

<div id="tempDataContainer" data-success="@TempData["SuccessMessage"]" data-error="@TempData["ErrorMessage"]"></div>

@section Scripts {
    <script>
        var editCommentUrl = '@Url.Action("EditComment", "Ticket")';
        var addCommentUrl = '@Url.Action("AddComment", "Ticket")';
        var deleteCommentUrl = '@Url.Action("DeleteComment", "Ticket")';
        var ticketId = '@Model.TicketId';
    </script>
    <script src="~/js/comment.js"></script>
    <script src="~/js/feedback.js"></script>
    <script src="~/js/toastrNotification.js"></script>
}