@model ASI.Basecode.Services.ServiceModels.TicketViewModel

@{
    ViewData["Title"] = "ViewTicket";
}

<h1>View Ticket</h1>

<div>
    <hr />
    <dl class="row">
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.TicketId)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.TicketId)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Subject)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Subject)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.IssueDescription)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.IssueDescription)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.CategoryTypeId)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.CategoryType.CategoryName)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.PriorityTypeId)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.PriorityType.PriorityName)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.StatusTypeId)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.StatusType.StatusName)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.CreatedDate)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.CreatedDate)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Attachment)
        </dt>
        <dd class="col-sm-10">
            @if (Model.Attachment == null)
            {
                @:No Attachment
            }
            else
            {
                <a href="@Url.Action("DownloadAttachment", "Ticket", new { id = Model.TicketId })">@Model.Attachment.Name</a>
            }
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.UpdatedDate)
        </dt>
        <dd class="col-sm-10">
            @if (Model.UpdatedDate == null)
            {
                @:No Updates
            }
            else
            {
                @Html.DisplayFor(model => model.UpdatedDate)
            }
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.ResolvedDate)
        </dt>
        <dd class="col-sm-10">
            @if (Model.ResolvedDate == null)
            {
                @:Open
            }
            else
            {
                @Html.DisplayFor(model => model.ResolvedDate)
            }
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.TicketAssignment)
        </dt>
        <dd class="col-sm-10">
            @if (Model.TicketAssignment == null)
            {
                @:No Assignee
            }
            else
            {
                @Html.DisplayFor(model => model.Agent.Name)
            }
        </dd>
    </dl>
    @if (Model.Feedback != null)
    {
        <h4>Feedback</h4>
        <hr/>
        <dl class="row">
            <dt class="col-sm-2">Rating</dt>
            <dd class="col-sm-10">
                <div class="star-rating no-interaction">
                    @{
                        for (int i = 5; i >= 1; i--)
                        {
                            <input disabled type="radio" id="star-@i" name="FeedbackRating"
                                   value="@i" @(Model.Feedback.FeedbackRating == i ? "checked" :
                       (Model.Feedback.FeedbackRating == 0 && i == 1 ? "checked" : "")) />
                            <label for="star-@i" title="@i stars"></label>
                        }
                    }
                </div>
            </dd>
            <dt class="col-sm-2">Content</dt>
            <dd class="col-sm-10">@Model.Feedback.FeedbackContent</dd>
            <dt class="col-sm-2">Submitted By</dt>
            <dd class="col-sm-10">@Model.Feedback.User.Name</dd>
            <dt class="col-sm-2">Created Date</dt>
            <dd class="col-sm-10">@Model.Feedback.CreatedDate</dd>
        </dl>
    }
</div>

<div>
    @if (Model.StatusType.StatusName != "Resolved")
	{
        @Html.ActionLink("Edit", "Edit", new { id = Model.TicketId })
        <text> | </text>
	}
    <a asp-action="ViewAll">Back to List</a>
    @if (Model.Feedback == null)
    {
        <button type="button" class="btn btn-primary" data-toggle="modal" data-target="#feedbackModal">
            Provide Feedback
        </button>
    }
</div>

<div class="modal fade" id="feedbackModal" tabindex="-1" role="dialog" aria-labelledby="feedbackModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="feedbackModalLabel">Provide Feedback</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <form id="feedbackForm">
                    @Html.AntiForgeryToken()
                    <input type="hidden" id="userId" name="UserId" value="@Model.UserId" />
                    <input type="hidden" id="ticketId" name="TicketId" value="@Model.TicketId" />
                    <div class="form-group">
                        <label for="rating">Rating</label>
                        <div class="star-rating">
                            <input type="radio" id="star5" name="FeedbackRating" value="5" /><label for="star5" title="5 stars"></label>
                            <input type="radio" id="star4" name="FeedbackRating" value="4" /><label for="star4" title="4 stars"></label>
                            <input type="radio" id="star3" name="FeedbackRating" value="3" /><label for="star3" title="3 stars"></label>
                            <input type="radio" id="star2" name="FeedbackRating" value="2" /><label for="star2" title="2 stars"></label>
                            <input type="radio" id="star1" name="FeedbackRating" value="1" /><label for="star1" title="1 star"></label>
                        </div>
                    </div>
                    <div class="form-group">
                        <label for="content">Content</label>
                        <textarea class="form-control" id="content" name="FeedbackContent" rows="3"></textarea>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                <button type="button" class="btn btn-primary" onclick="submitFeedback()">Submit</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function() {
            var url = new URL(window.location);
            var showModal = url.searchParams.get('showModal');

            if (showModal === 'provideFeedback') {
                $('#feedbackModal').modal('show');
                url.searchParams.delete('showModal');
                window.history.replaceState(null, null, url);
            }
        });

        function submitFeedback() {
            var formData = {
                UserId: $('#userId').val(),
                TicketId: $('#ticketId').val(),
                FeedbackRating: $('input[name="FeedbackRating"]:checked').val(),
                FeedbackContent: $('#content').val(),
                __RequestVerificationToken: $('input[name="__RequestVerificationToken"]').val()
            };

            if (!formData.FeedbackRating || !formData.FeedbackContent) {
                alert('Please fill out all fields.');
                return;
            }

            $.ajax({
                url: '@Url.Action("ProvideFeedback", "Feedback")',
                type: 'POST',
                data: formData,
                success: function (response) {
                    $('#feedbackModal').modal('hide');

                    $('#feedbackForm')[0].reset();

                    alert('Thank you for your feedback!');

                    location.reload();
                },
                error: function () {
                    alert('An error occurred while submitting your feedback. Please try again.');
                }
            });
        }
    </script>
}

<style>
    .star-rating {
        direction: rtl;
    }

    .star-rating input[type="radio"] {
        display: none;
    }
    
    .star-rating label {
        font-size: 2rem;
        color: #ddd;
        cursor: pointer;
    }

    .star-rating label:before {
        content: '★';
    }

    .star-rating input[type="radio"]:checked ~ label {
        color: #f5c518;
    }

    .star-rating label:hover,
    .star-rating label:hover ~ label {
        color: #f5c518;
     }

    .star-rating.no-interaction label {
        cursor: default;
        pointer-events: none;
    }
</style>