@model ASI.Basecode.Services.ServiceModels.PaginatedList<ASI.Basecode.Services.ServiceModels.KnowledgeBaseViewModel>
@using ASI.Basecode.Data.Models

@{
    ViewData["Title"] = "Index";
}

<div class="d-flex justify-content-between nav-header">
    <h1 class=" display-6">Articles</h1>
    <div class="d-flex justify-content-between">
        <form method="get" asp-action="Index">
            <div class="form-group input-group">
                <input type="text" name="searchTerm" class="form-control btn-radius px-3" placeholder="Search Articles..." value="@ViewBag.SearchTerm" />
                <span class="input-group-append">
                    <button type="submit" class="btn btn-primary btn-radius-r px-3">
                        <i class="fa fa-search"></i>
                    </button>
                </span>
                @* <a asp-action="Index" class="btn btn-secondary">Clear Filters</a> *@
            </div>
        </form>

        @if (User.IsInRole("Admin") || User.IsInRole("Support Agent"))
        {
            <div class="mx-3">
                <button type="button" class="btn btn-primary btn-radius px-3" onclick="window.location.href='@Url.Action("Create")'">
                    <i class="fa fa-plus"></i>
                    Create New
                </button>
            </div>

        }
    </div>
</div>


<div class="container-sm m-3 mt-5 mb-4">
    <div class="row mb-2 align-items-center">
        <div class="col-sm text-left">
            @if (Model.HasPreviousPage)
            {
                <a asp-action="Index"
                   asp-route-searchTerm="@ViewBag.SearchTerm"
                   asp-route-selectedCategories="@string.Join(",", (List<string>) ViewBag.SelectedCategories)"
                   asp-route-sortBy="ViewBag.SortBy"
                   asp-route-sortOrder="ViewBag.SortOrder"
                   asp-route-pageNumber="@(Model.PageIndex - 1)" class="btn  btn-primary">Previous</a>
            }
            @if(Model.HasNextPage){
            <a asp-action="Index"
               asp-route-searchTerm="@ViewBag.SearchTerm"
               asp-route-selectedCategories="@string.Join(",", (List<string>)ViewBag.SelectedCategories)"
               asp-route-sortBy="@ViewBag.SortBy"
               asp-route-sortOrder="@ViewBag.SortOrder"
               asp-route-pageNumber="@(Model.PageIndex + 1)" class="btn  btn-primary">Next</a>
            }
        </div>

        <div class="col text-right">
            <form asp-action="Index" method="get" class="form-inline d-inline-flex justify-content-end">
                <div class="form-group mr-2">
                    <select id="categories" name="selectedCategories" multiple="multiple" class="form-control">
                        @foreach (var category in ViewBag.Categories as IEnumerable<ArticleCategory>)
                        {
                            <option value="@category.CategoryId" selected="@(ViewBag.SelectedCategories != null && ((List<string>)ViewBag.SelectedCategories).Contains(category.CategoryId) ? "selected" : null)">@category.CategoryName</option>
                        }
                    </select>
                </div>

                <div class="form-group mr-2">
                    <label for="sortBy" class="mr-2">Sort By</label>
                    <select name="sortBy" class="form-control">
                        <option value="CreatedDate" selected="@(ViewBag.SortBy == "CreatedDate" ? "selected" : null)">Created Date</option>
                        <option value="UpdatedDate" selected="@(ViewBag.SortBy == "UpdatedDate" ? "selected" : null)">Updated Date</option>
                        <option value="Title" selected="@(ViewBag.SortBy == "Title" ? "selected" : null)">Title</option>
                    </select>
                </div>

                <div class="form-group mr-2">
                    <label for="sortOrder" class="mr-2">Sort Order</label>
                    <select name="sortOrder" class="form-control">
                        <option value="asc" selected="@(ViewBag.SortOrder == "asc" ? "selected" : null)">Ascending</option>
                        <option value="desc" selected="@(ViewBag.SortOrder == "desc" ? "selected" : null)">Descending</option>
                    </select>
                </div>

                <button type="submit" class="btn btn-primary">Search</button>
            </form>
        </div>
    </div>

    @foreach (var item in Model)
    {
        <div class="card mb-3">
            <div class="card-body">
                <div class="d-flex justify-content-between align-items-start">
                    <div style="display: flex; align-items: center;">
                        <h5 class="card-title m-0 pr-2 poppins-semi-bold">@Html.DisplayFor(modelItem => item.Title)</h5>
                        <small class="text-muted pt-1">(@Html.DisplayFor(modelItem => item.Category.CategoryName))</small>
                    </div>
                    <small class="text-muted">@Html.DisplayFor(modelItem => item.CreatedDate)</small>
                </div>
                <p class="card-text mt-3">@Html.DisplayFor(modelItem => item.Content)</p>
                <div class="d-flex justify-content-between align-items-end mt-4">
                    <div>
                        <h6 class="card-subtitle text-muted">@Html.DisplayFor(modelItem => item.Author.Name)</h6>
                    </div>
                    <div>
                        @if (User.IsInRole("Admin") || User.IsInRole("Support Agent"))
                        {
                            @Html.ActionLink("", "Edit", new { articleId = item.ArticleId }, new { @class = "fas fa-pencil action-icon", })
                        }
                        @Html.ActionLink("", "Details", new { articleId = item.ArticleId }, new { @class = "fas fa-info-circle action-icon", })
                        @if (User.IsInRole("Admin"))
                        {
                            <a href="javascript:void(0);" onclick="displayDeleteModal('@item.ArticleId')" class="fas fa-trash action-icon ms-2"></a>
                        }
                    </div>
                </div>
            </div>
        </div>
    }
</div>
<div class="modal fade" id="deleteModal">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="deleteModalLabel">Confirm Delete</h5>
                <button type="button" class="close" data-dismiss="modal">
                    <span>&times;</span>
                </button>
            </div>
            <div class="modal-body">
                Are you sure you want to delete this item?
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-danger" id="confirmDeleteBtn">Delete</button>
            </div>
        </div>

    </div>
</div>

@section Scripts {
    <script>
        var itemId;
        function displayDeleteModal(id) {
            itemId = id;
            $('#deleteModal').modal('show');
        }
        $('#confirmDeleteBtn').on('click', function () {
            $.ajax({
                url: '@Url.Action("PostDelete", "KnowledgeBase")',
                type: 'POST',
                data: { articleId: itemId },
                success: function (result) {
                    sessionStorage.setItem("DeleteSuccess", "Deleted Successfully");
                    window.location.href = '@Url.Action("Index", "KnowledgeBase")';
                }
            })
        })

    </script>

    <script>
        var createMessage = '@TempData["CreateMessage"]';
        var deleteMessage = sessionStorage.getItem("DeleteSuccess");

        if (createMessage) {
            toastr.success(createMessage);
        } else if (deleteMessage) {
            toastr.success(deleteMessage);
            sessionStorage.removeItem("DeleteSuccess");
        }
    </script>

    <script type="text/javascript">
        $(document).ready(function() {
            $('#categories').multiselect({
                includeSelectAllOption: true,
                nonSelectedText: 'Select Categories'
            });
        });
    </script>
}
