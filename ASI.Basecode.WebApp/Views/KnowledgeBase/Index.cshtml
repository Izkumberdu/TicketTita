@model ASI.Basecode.Services.ServiceModels.PaginatedList<ASI.Basecode.Services.ServiceModels.KnowledgeBaseViewModel>
@using ASI.Basecode.Data.Models

@{
    ViewData["Title"] = "Index";
}

<h1>View Article List</h1>

<p>
    <a asp-action="Create">Create New</a>
</p>

<form asp-action="Index" method="get">
    <input type="text" name="searchTerm" placeholder="Search Articles..." value="@ViewBag.SearchTerm"/>
    <select id="categories" name="selectedCategories" multiple="multiple">
        @foreach (var category in ViewBag.Categories as IEnumerable<ArticleCategory>)
        {
            <option value="@category.CategoryId" selected="@(ViewBag.SelectedCategories != null && ((List<string>)ViewBag.SelectedCategories).Contains(category.CategoryId) ? "selected" : null)">@category.CategoryName</option>
        }
    </select>
    <select name="sortBy">
        <option value="CreatedDate" selected="@(ViewBag.SortBy == "CreatedDate" ? "selected" : null)">Created Date</option>
        <option value="UpdatedDate" selected="@(ViewBag.SortBy == "UpdatedDate" ? "selected" : null)">Updated Date</option>
        <option value="Title" selected="@(ViewBag.SortBy == "Title" ? "selected" : null)">Title</option>
    </select>
    <select name="sortOrder">
        <option value="asc" selected="@(ViewBag.SortOrder == "asc" ? "selected" : null)">Ascending</option>
        <option value="desc" selected="@(ViewBag.SortOrder == "desc" ? "selected" : null)">Descending</option>
    </select>
    <button type="submit">Search</button>
</form>
    

<table class="table">
    <thead>
        <tr>
            <th>
                Article ID
            </th>
            <th>
                Category
            </th>
            <th>
                Title
            </th>
            <th>
                Content
            </th>
            <th>
                Date Created
            </th>
            <th>
                Date Updated
            </th>
            <th>
                Author
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.ArticleId)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Category.CategoryName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Title)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Content)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.CreatedDate)
            </td>
            <td>
                @if (item.UpdatedDate == null)
                {
                    @:No Updates
                }
                else
                {
                    @Html.DisplayFor(modelItem => item.UpdatedDate)
                }
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Author.Name)
            </td>
            <td>
                    @Html.ActionLink("Edit", "Edit", new { articleId = item.ArticleId }) |
                    @Html.ActionLink("Details", "Details", new { articleId = item.ArticleId }) |
                    @* @Html.ActionLink("Delete", "Delete", new { articleId = item.ArticleId }) *@
                    <a href="javascript:void(0);" onclick="displayDeleteModal('@item.ArticleId')">Delete</a>
            </td>
        </tr>
        }
    </tbody>
</table>

<div>
    @if (Model.HasPreviousPage)
    {
        <a asp-action="Index" 
            asp-route-searchTerm="@ViewBag.SearchTerm" 
            asp-route-selectedCategories="@string.Join(",", (List<string>) ViewBag.SelectedCategories)" 
            asp-route-sortBy="ViewBag.SortBy" 
            asp-route-sortOrder="ViewBag.SortOrder" 
            asp-route-pageNumber="@(Model.PageIndex - 1)">Previous</a>
    }
    @if (Model.HasNextPage)
    {
        <a asp-action="Index" 
            asp-route-searchTerm="@ViewBag.SearchTerm" 
            asp-route-selectedCategories="@string.Join(",", (List<string>)ViewBag.SelectedCategories)" 
            asp-route-sortBy="@ViewBag.SortBy" 
            asp-route-sortOrder="@ViewBag.SortOrder" 
            asp-route-pageNumber="@(Model.PageIndex + 1)">Next</a>
    }
</div>

<div class="modal fade" id="deleteModal">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="deleteModalLabel">Confirm Delete</h5>
                <button type="button" class="close" data-dismiss="modal">
                    <span>&times;</span>
                </button>
            </div>
            <div class="modal-body">
                Are you sure you want to delete this item?
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-danger" id="confirmDeleteBtn">Delete</button>
            </div>
        </div>

    </div>
</div>

@section Scripts {
    <script>
        var itemId;
        function displayDeleteModal(id) {
            itemId = id;
            $('#deleteModal').modal('show');
        }
        $('#confirmDeleteBtn').on('click', function () {
            $.ajax({
                url: '@Url.Action("PostDelete", "KnowledgeBase")',
                type: 'POST',
                data: { articleId: itemId },
                success: function (result) {
                    sessionStorage.setItem("DeleteSuccess", "Deleted Successfully");
                    window.location.href = '@Url.Action("Index", "KnowledgeBase")';
                }
            })
        })

    </script>

    <script>
        var createMessage = '@TempData["CreateMessage"]';
        var deleteMessage = sessionStorage.getItem("DeleteSuccess");

        if (createMessage) {
            toastr.success(createMessage);
        } else if (deleteMessage) {
            toastr.success(deleteMessage);
            sessionStorage.removeItem("DeleteSuccess");
        }
    </script>

    <script type="text/javascript">
        $(document).ready(function() {
            $('#categories').multiselect({
                includeSelectAllOption: true,
                nonSelectedText: 'Select Categories'
            });
        });
    </script>
}
