@model ASI.Basecode.Services.ServiceModels.PaginatedList<ASI.Basecode.Services.ServiceModels.KnowledgeBaseViewModel>
@using ASI.Basecode.Data.Models

@{
    ViewData["Title"] = "Articles";
    await Html.RenderPartialAsync("_CreateArticleModal", new ASI.Basecode.Services.ServiceModels.KnowledgeBaseViewModel
            {
                ArticleCategories = ViewBag.Categories
            });

    string selectedCategories = ViewData["SelectedCategories"] as string;
    string sortBy = ViewData["SortBy"] as string;
    string sortOrder = ViewData["SortOrder"] as string;
    string searchTerm = ViewBag.SearchTerm as string;
    int pageIndex = Model.PageIndex;
    int pageSize = (ViewData["PageSize"] as int?) ?? 5;
}

<div class="d-flex justify-content-between nav-header">
    <h1 class="display-6">Articles</h1>
    <div class="d-flex justify-content-between">
        <form method="get" asp-action="Index">
            <div class="form-group input-group">
                <input type="text" name="searchTerm" class="form-control btn-radius px-3" placeholder="Search Articles..." value="@searchTerm" />
                <span class="input-group-append">
                    <button type="submit" class="btn btn-primary btn-radius-r px-3">
                        <i class="fa fa-search"></i>
                    </button>
                </span>
            </div>
        </form>
        @if (User.IsInRole("Admin") || User.IsInRole("Support Agent"))
        {
            <div class="mx-3">
                <button type="button" class="btn btn-primary btn-radius px-3" data-toggle="modal" data-target="#createModal">
                    <i class="fa fa-plus"></i>
                    New Article
                </button>
            </div>
        }
        <div class="mr-3">
            <button type="button" class="btn notif-bell" id="notifBellBtn">
                <i class="fa fa-bell px-1"></i>
            </button>
        </div>
        <div id="notificationModal" class="modal fixed-right fade" tabindex="-2" role="dialog">
            <div class="modal-dialog modal-dialog-aside" role="document">
                <div class="modal-content">
                    <!-- Notification Modal -->
                </div>
            </div>
        </div>
    </div>
</div>

<div class="container-fluid px-4 py-3">
    <div class="row">
        <div class="col-9">
            @if (!Model.Any())
            {
                <div class="alert alert-warning text-center" role="alert">
                    @(!selectedCategories.Any() ? Html.Raw("No articles found") : Html.Raw("No articles found matching the criteria"))
                </div>
            }
            else
            {
                <div class="container py-3">
                    @foreach (var item in Model)
                    {
                        <div class="card mb-3">
                            <div class="card-body">
                                <div class="d-flex justify-content-between align-items-start">
                                    <div style="display: flex; align-items: center;">
                                        <h5 class="card-title m-0 pr-2 poppins-semi-bold">@Html.DisplayFor(modelItem => item.Title)</h5>
                                        <small class="text-muted pt-1">(@Html.DisplayFor(modelItem => item.Category.CategoryName))</small>
                                    </div>
                                    <small class="text-muted">@Html.DisplayFor(modelItem => item.CreatedDate)</small>
                                </div>
                                <p class="card-text mt-3">@Html.DisplayFor(modelItem => item.Content)</p>
                                <div class="d-flex justify-content-between align-items-end mt-4">
                                    <div>
                                        <h6 class="card-subtitle text-muted">@Html.DisplayFor(modelItem => item.Author.Name)</h6>
                                    </div>
                                    <div>
                                        @if (User.IsInRole("Admin") || User.IsInRole("Support Agent"))
                                        {
                                            <a href="javascript:void(0);" class="fas fas fa-pencil action-icon" data-toggle="modal" data-target="#editArticleModal" data-articleid="@item.ArticleId" data-toggle="tooltip" title="Edit"></a>
                                        }
                                        @if (User.IsInRole("Admin"))
                                        {
                                            <a href="javascript:void(0);" onclick="displayDeleteModal('@item.ArticleId')" class="fas fa-trash action-icon ms-2"></a>
                                        }
                                    </div>
                                </div>
                            </div>
                        </div>
                    }
                </div>
            }

            <nav class="container">
                <ul class="pagination">
                    @if (Model.HasPreviousPage)
                    {
                        <li class="page-item">
                            <form method="get" asp-action="Index" asp-route-pageIndex="@(Model.PageIndex - 1)" asp-route-sortBy="@sortBy" asp-route-searchTerm="@searchTerm" asp-route-sortOrder="@sortOrder" asp-route-pageSize="@pageSize">
                                <input type="hidden" name="selectedCategories" value="@selectedCategories" />
                                <input type="hidden" name="pageIndex" value="@(Model.PageIndex - 1)" />
                                <input type="hidden" name="pageSize" value="@pageSize" />
                                <button type="submit" class="page-link">Previous</button>
                            </form>
                        </li>
                    }
                    @for (int i = 1; i <= Model.TotalPages; i++)
                    {
                        <li class="page-item @(i == Model.PageIndex + 1 ? "active" : "")">
                            <form method="get" asp-action="Index" asp-route-pageIndex="@(i - 1)" asp-route-sortBy="@sortBy" asp-route-searchTerm="@searchTerm" asp-route-sortOrder="@sortOrder" asp-route-pageSize="@pageSize">
                                <input type="hidden" name="selectedCategories" value="@selectedCategories" />
                                <input type="hidden" name="pageIndex" value="@(i - 1)" />
                                <input type="hidden" name="pageSize" value="@pageSize" />
                                <button type="submit" class="page-link">@i</button>
                            </form>
                        </li>
                    }
                    @if (Model.HasNextPage)
                    {
                        <li class="page-item">
                            <form method="get" asp-action="Index" asp-route-pageIndex="@(Model.PageIndex + 1)" asp-route-sortBy="@sortBy" asp-route-searchTerm="@searchTerm" asp-route-sortOrder="@sortOrder" asp-route-pageSize="@pageSize">
                                <input type="hidden" name="selectedCategories" value="@selectedCategories" />
                                <input type="hidden" name="pageIndex" value="@(Model.PageIndex + 1)" />
                                <input type="hidden" name="pageSize" value="@pageSize" />
                                <button type="submit" class="page-link">Next</button>
                            </form>
                        </li>
                    }
                </ul>
            </nav>
        </div>

        @* Filters and Sorting Card *@
        @await Html.PartialAsync("_FiltersAndSortCardArticles")
    </div>
</div>

@* Delete Article Modal *@
<div class="modal fade" id="deleteModal">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="deleteModalLabel">Confirm Delete</h5>
                <button type="button" class="close" data-dismiss="modal">
                    <span>&times;</span>
                </button>
            </div>
            <div class="modal-body">
                Are you sure you want to delete this item?
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-danger" id="confirmDeleteBtn">Delete</button>
            </div>
        </div>

    </div>
</div>

@* Edit Article Modal *@
<div class="modal fade" id="editArticleModal" tabindex="-1" role="dialog" aria-labelledby="editArticleModallLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered modal-lg" role="document">
        <div class="modal-content modal-content-article" id="editArticleModalContent">
        </div>
    </div>
</div>

@section Scripts {
    <script src="~/js/knowledgebase.js"></script>
    <script>
        var createMessage = '@TempData["CreateMessage"]';
        var deleteMessage = sessionStorage.getItem("DeleteSuccess");
        var updateMessage = '@TempData["UpdateMessage"]';
        if (createMessage) {
            toastr.success(createMessage);
        } else if (deleteMessage) {
            toastr.success(deleteMessage);
            sessionStorage.removeItem("DeleteSuccess");
        } else if (updateMessage) {
            toastr.success(updateMessage);
        }
        $(document).ready(function () {
            $('#categories').multiselect({
                includeSelectAllOption: true,
                nonSelectedText: 'Select Categories'
            });
        });

        function displayDeleteModal(id) {
            itemId = id;
            $('#deleteModal').modal('show');
        }
        $('#confirmDeleteBtn').on('click', function () {
            $.ajax({
                url: '@Url.Action("PostDelete", "KnowledgeBase")',
                type: 'POST',
                data: { articleId: itemId },
                success: function (result) {
                    sessionStorage.setItem("DeleteSuccess", "Deleted Successfully");
                    window.location.href = '@Url.Action("Index", "KnowledgeBase")';
                }
            })
        })
        $(document).ready(function () {
            $('.fa-pencil').click(function () {
                var articleId = $(this).data('articleid');
                var url = '@Url.Action("Edit")?articleId=' + articleId;
                $.get(url, function (data) {
                    $('#editArticleModalContent').html(data);
                    setupEditModal();
                });
            });
        });
    </script>

    <script>
        $(document).ready(function () {
            $('#notifBellBtn').click(function () {
                $.ajax({
                    url: '@Url.Action("Index", "Notification")',
                    success: function (result) {
                        $('#notificationModal .modal-content').html(result);
                        $('#notificationModal').modal('show');
                    }
                });
            });
        });
    </script>
}

@section styles {
    <link rel="stylesheet" href="~/css/notification.css" />
    <link rel="stylesheet" href="~/css/pagination.css" />
}