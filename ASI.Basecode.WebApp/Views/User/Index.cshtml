@model IEnumerable<ASI.Basecode.Services.ServiceModels.UserViewModel>

@{
    ViewData["Title"] = "Index";
    string currentFilter = ViewData["CurrentFilter"] as string;
    string sortOrder = ViewData["CurrentSort"] as string;
    string nameSortParm = String.IsNullOrEmpty(sortOrder) ? "name_desc" : "";
    string emailSortParm = sortOrder == "Email" ? "email_desc" : "Email";
    string createdBySortParm = sortOrder == "CreatedBy" ? "createdBy_desc" : "CreatedBy";
    string createdTimeSortParm = sortOrder == "CreatedTime" ? "createdTime_desc" : "CreatedTime";
    string updatedBySortParm = sortOrder == "UpdatedBy" ? "updatedBy_desc" : "UpdatedBy";
    string roleSortParm = sortOrder == "Role" ? "role_desc" : "Role";
    string updatedTimeSortParm = sortOrder == "UpdatedTime" ? "updatedTime_desc" : "UpdatedTime";
}

<div class="d-flex justify-content-between nav-header">
    <h1 class=" display-6">Registered Users</h1>

    <div class="d-flex justify-content-between">
        <form method="get" asp-action="Index">
            <div class="form-group input-group">
                <input type="text" name="searchString" class="form-control btn-radius px-3" placeholder="Search by name or email" value="@currentFilter" />
                <span class="input-group-append">
                    <button type="submit" class="btn btn-primary btn-radius-r px-3">
                        <i class="fa fa-search"></i>
                    </button>
                </span>
                @* <a asp-action="Index" class="btn btn-secondary">Clear Filters</a> *@
            </div>
        </form>
        <div class="mx-3">
                <a asp-action="Create" class="btn btn-primary btn-radius px-3">
                    <i class="fa fa-plus"></i>
                    New User
                </a>
        </div>
    </div>

</div>

<div class="container-fluid my-3">
    <table class="table table-white">
        <thead>
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.UserId)
                </th>
                <th>
                    <a asp-action="Index" asp-route-sortOrder="@nameSortParm" asp-route-currentFilter="@currentFilter" class="text-black">
                        @Html.DisplayNameFor(model => model.Name)
                        <i class="fa-solid fa-chevron-down"></i>
                    </a>
                </th>
                <th>
                    <a asp-action="Index" asp-route-sortOrder="@emailSortParm" asp-route-currentFilter="@currentFilter" class="text-black">
                        @Html.DisplayNameFor(model => model.Email)
                        <i class="fa-solid fa-chevron-down"></i>
                    </a>
                </th>
                <th>
                    <a asp-action="Index" asp-route-sortOrder="@roleSortParm" asp-route-currentFilter="@currentFilter" class="text-black">
                        @Html.DisplayNameFor(model => model.RoleId)
                        <i class="fa-solid fa-chevron-down"></i>
                    </a>
                </th>
                <th>
                    <a asp-action="Index" asp-route-sortOrder="@createdTimeSortParm" asp-route-currentFilter="@currentFilter" class="text-black">
                        @Html.DisplayNameFor(model => model.CreatedTime)
                        <i class="fa-solid fa-chevron-down"></i>
                    </a>
                </th>
                <th>
                    <a asp-action="Index" asp-route-sortOrder="@updatedTimeSortParm" asp-route-currentFilter="@currentFilter" class="text-black">
                        @Html.DisplayNameFor(model => model.UpdatedTime)
                        <i class="fa-solid fa-chevron-down"></i>
                    </a>
                </th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.UserId)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Name)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Email)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.RoleId)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.CreatedTime)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.UpdatedTime)
                    </td>
                    <td>
                        @Html.ActionLink("", "Update", new { SelectedUserId = item.UserId }, new { @class = "fas fa-edit action-icon" })
                        @Html.ActionLink("", "Details", new { SelectedUserId = item.UserId }, new { @class = "fas fa-info-circle action-icon" })
                        <a href="javascript:void(0);" onclick="displayDeleteModal('@item.UserId')" class="fas fa-trash-alt action-icon"></a>
                        @if (item.RoleId.Equals("Support Agent")) {
                            <button type="button" class="btn btn-info btn-sm" onclick="loadPerformanceReport('@item.UserId')">
                                View Performance
                            </button>
                        }
                    </td>

                </tr>
            }
        </tbody>
    </table>
</div>

<!-- Delete Modal -->
<div class="modal fade" id="deleteModal" tabindex="-1" role="dialog" aria-labelledby="deleteModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">
            <div class="modal-header border-0">
                <h5 class="modal-title" id="deleteModalLabel">
                    <i class="fa fa-exclamation-triangle px-1" style="color: var(--danger-color);"></i>
                    Confirm Delete
                </h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body pl-4 py-1">
                <p>Are you sure you want to delete this user? All of their data will permanently removed. This action cannot be undone.</p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-danger" id="confirmDeleteBtn">Delete</button>
            </div>
        </div>
    </div>
</div>

<!-- Performance Report Modal -->
<div class="modal fade" id="performanceReportModal" tabindex="-1" role="dialog" aria-labelledby="performanceReportModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg modal-dialog-centered" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="performanceReportModalLabel">Performance Report</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <div id="performanceReportContent">
                    <!-- Performance report content will be loaded here -->
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        var itemId;
        function displayDeleteModal(id) {
            itemId = id;
            $('#deleteModal').modal('show');
        }
        function loadPerformanceReport(userId) {
            $.ajax({
                url: '@Url.Action("GetPerformanceReport", "User")',
                type: 'GET',
                data: { userId: userId },
                success: function (data) {
                    $('#performanceReportContent').html(data);
                    $('#performanceReportModal').modal('show');
                }
            });
        }
        $('#confirmDeleteBtn').on('click', function () {
            $.ajax({
                url: '@Url.Action("PostDelete", "User")',
                type: 'POST',
                data: { id: itemId },
                success: function (result) {
                    sessionStorage.setItem("DeleteSuccess", "Deleted Successfully");
                    window.location.href = '@Url.Action("Index", "User")';
                }
            });
        });

        var createMessage = '@TempData["CreateMessage"]';
        var deleteMessage = sessionStorage.getItem("DeleteSuccess");

        if (createMessage) {
            toastr.success(createMessage);
        } else if (deleteMessage) {
            toastr.success(deleteMessage);
            sessionStorage.removeItem("DeleteSuccess");
        }
    </script>
}
